AWSTemplateFormatVersion: "2010-09-09"
Description: Monitor the scheduled pressing of fronts
Parameters:
    Stack:
        Description: Stack name
        Type: String
        Default: cms-fronts
    App:
        Description: Application name
        Type: String
        Default: front-press-monitor
    Stage:
        Description: Stage name
        Type: String
        AllowedValues:
            - PROD
        Default: PROD
    DeployBucket:
        Description: Bucket where RiffRaff uploads artifacts on deploy
        Type: String
    CMSFrontsBucket:
        Description: Bucket containing the fronts configuration
        Type: String
    DynamoTable:
        Description: Table with the last pressed information
        Type: String
Resources:
    ExecutionRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Statement:
                    - Effect: Allow
                      Principal:
                          Service:
                              - lambda.amazonaws.com
                      Action: "sts:AssumeRole"
            Path: /
            Policies:
                - PolicyName: logs
                  PolicyDocument:
                      Statement:
                          Effect: Allow
                          Action:
                              - "logs:CreateLogGroup"
                              - "logs:CreateLogStream"
                              - "logs:PutLogEvents"
                          Resource: "arn:aws:logs:*:*:*"
                - PolicyName: lambda
                  PolicyDocument:
                      Statement:
                          Effect: Allow
                          Action:
                              - "lambda:InvokeFunction"
                          Resource: "*"
                - PolicyName: params
                  PolicyDocument:
                      Statement:
                          Effect: Allow
                          Action:
                              - "ssm:GetParameter*"
                          Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/front-press-monitor/*"
                - PolicyName: bucket
                  PolicyDocument:
                      Statement:
                          Effect: Allow
                          Action:
                              - "s3:GetObject"
                          Resource:
                              - Fn::Join:
                                    - ""
                                    - - "arn:aws:s3:::"
                                      - Ref: CMSFrontsBucket
                                      - "/*"
                - PolicyName: table
                  PolicyDocument:
                      Statement:
                          Effect: Allow
                          Action:
                              - "dynamodb:BatchGetItem"
                          Resource:
                              - Fn::Join:
                                    - ""
                                    - - "arn:aws:dynamodb:"
                                      - Ref: AWS::Region
                                      - ":"
                                      - Ref: AWS::AccountId
                                      - ":table/"
                                      - Ref: DynamoTable
    Lambda:
        Type: AWS::Lambda::Function
        Properties:
            Code:
                S3Bucket:
                    Ref: DeployBucket
                S3Key: !Sub
                    - cms-fronts/${Stage}/front-press-monitor/front-press-monitor.zip
                    - { Stage: !Ref Stage }
            Description: Monitor admin press
            Handler: index.handler
            MemorySize: 128
            Role:
                "Fn::GetAtt": ["ExecutionRole", "Arn"]
            Runtime: nodejs14.x
            Timeout: 60
    EventSource:
        Type: AWS::Events::Rule
        Properties:
            Description: Schedule the lambda
            ScheduleExpression: rate(30 minutes)
            State: ENABLED
            Targets:
                - Arn:
                      Fn::GetAtt:
                          - Lambda
                          - Arn
                  Id: Lambda
    LambdaPermission:
        Type: AWS::Lambda::Permission
        Properties:
            FunctionName:
                Ref: Lambda
            Action: lambda:InvokeFunction
            Principal: events.amazonaws.com
            SourceArn:
                Fn::GetAtt:
                    - EventSource
                    - Arn
